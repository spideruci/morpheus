{"version":3,"sources":["components/Footer.module.scss","pages/Morpheus.module.scss","components/Navbar.module.scss","components/morpheus/Toolbar.module.scss","components/Footer.js","components/Navbar.js","pages/About.js","hooks/useProcessCoverage.js","components/morpheus/MatrixVisualization.js","logic/api/api-config.js","logic/api/morpheusAPIv2.js","logic/api/MorpheusTypes.js","hooks/useHistoryReducer.js","logic/util/coverage_map.js","logic/sorting/methods.js","logic/sorting/tests.js","logic/sorting/commits.js","logic/coloring/useColors.js","hooks/useMorpheusReducer.js","pages/MorpheusContext.js","logic/filters/methods.js","logic/filters/tests.js","components/morpheus/Toolbar.js","components/morpheus/MethodPopover.js","pages/Morpheus.js","App.js","index.js"],"names":["module","exports","Footer","className","styles","footer","social","href","alt","src","Navbar","to","About","useState","content","setContent","useEffect","axios","get","process","then","res","data","md_content","catch","console","error","source","useProcessCoverage","state","coverage","setCoverage","processedCoverage","filters","filteredCoverage","x","y","edges","Object","entries","filterEntry","filterCoverage","sort","undefined","func","sortCoverage","MatrixVisualization","props","ref","React","createRef","width","height","margin","top","left","right","bottom","labelToggle","hasOwnProperty","createMatrix","bind","createTestMatrixView","update","onXClick","onYClick","onRightClick","current","this","length","x_labels","y_labels","nodes","parentElement","offsetWidth","offsetHeight","setState","window","addEventListener","prevProps","prevState","snapshot","node","svg","select","attr","zoomFun","zoom","on","e","transform","call","unitSide","w","h","vis_width","vis_height","xScale","scalePoint","padding","range","domain","map","label","getID","yScale","createTickFormatter","labelInterval","i","tooltip","style","mouseover","d","mousemove","datum","toString","edgeLabel","parseFloat","text","mouseleave","xLabel","find","yLabel","append","html","x_tick_interval","y_tick_interval","x_toggle","y_toggle","xAxis","axisTop","tickFormat","scale","yAxis","axisLeft","t","transition","duration","ease","easeLinear","rectWidth","step","rectHeight","matrixNodes","selectAll","join","enter","getX","getY","exit","remove","getColor","Math","max","getProperty","tickWidth","xTickLength","tickId","id","filter","tickHeight","yTickLength","g","Component","API_ROOT","REACT_APP_API_ENDPOINT","DYNAMIC_API","fetchProjects","fetchCommits","project_id","fetchCoverage","commit_id","fetchTestHistory","test_id","fetchMethodHistory","method_id","debug_api","api_endpoint","debug","API","Project","name","getProjectName","Edge","properties","parseInt","property","key","value","Method","packageName","methodName","methodDecl","filePath","Test","testName","Commit","sha","date","author","Date","short_sha","slice","toDateString","HISTORY_ACTION","create_coverage_map","get_key","get_value","test_id_map","Map","forEach","edge","has","method_ids","add","set","Set","sortMethodsByName","axis","current_state","all_data","a","b","sortMethodsByCoverage","x_map","e1","e2","id1","id2","size1","size","size2","sortMethodsBySuspiciousness","suspciousness_map","test_result_map","result","total_tests_failed","total_tests_passed","log","warn","elem","method","passed","failed","suspiciousness","s1","s2","sortTestsByName","sortTestsByCoverage","y_map","sortCommitsByDate","getDate","COLOR_SCHEMES","TEST_RESULT","TEST_TYPE","setColorScheme","colorScheme","coverageType","currentCoverage","globalCoverage","METHOD_COLOR_FUNCTIONS","package_name","methods","TEST_COLOR_FUNCTIONS","tests","EDGES_COLOR_FUNCTIONS","test_result","test_type_map","global","newX","element","boo","random","push","test_to_meth_map","test_id_to_type_map","map_method_id","m","index","array","package_set","class_set","getPackageName","class_name","getClassName","createTestTypeMap","test_type","constructor","unique_method_packages","prototype","scaleOrdinal","schemeSet3","Array","from","unique_tests_packages","test","MORPHEUS_ACTION","morpheusReducer","action","type","info","project","commit","color_scheme","pop_up","isVisible","anchor","x_func","y_func","parseCoverage","method_name","method_decl","file_path","parseMethodHistory","commits","c","datetime","parseTestHistory","useMorpheusController","initialState","reducer","historyState","past","present","future","newPresent","newPast","newFuture","historyReducer","intialState","useReducer","dispatch","json","response","isLoading","MorpheusContext","createContext","MorpheusProvider","Provider","children","filterByCoOccurence","filterX","getMethodName","yIDs","filteredY","yElem","includes","filteredYIds","filteredEdges","filteredXIds","xElem","TEST_TYPES","ALL","UNIT","INTEGRATION","SYSTEM","filterByTestType","testType","filter_type","p","is_of_test_type","new_tests","new_edges","new_test_ids","objectList","object_id_map","create_id_map","y_to_x_map","x_covered","test_type_filter","filterByCoexecutedTests","identifier","filter_test","filtered_test_id","filtered_methods","filtered_edges","highlight","test_ids","ToolBar","onReset","onUndo","onRedo","toolbar","Button","onClick","CoverageToolbar","useContext","onChange","valueX","valueY","MethodHistoryToolbar","TestHistoryToolbar","ProjectSelectors","projectList","setProjectList","commitList","setCommitList","projects","project_name","display","Autocomplete","mediumButton","disableClearable","options","getOptionLabel","option","projectName","target","innerHTML","err","renderInput","params","TextField","variant","flex","disabled","commitSha","CoverageSorter","SORT_MAP_X","Name","Coverage","Suspiciousness","SORT_KEYS_X","keys","SORT_MAP_Y","SORT_KEYS_Y","Select","mediumMenu","defaultValue","MenuItem","MethodHistorySorter","SORT_MAP_TESTS","SORT_KEYS_TESTS","TestHistorySorter","SORT_MAP_METHODS","SORT_KEYS_METHODS","CoverageColorSelector","COLOR_SCHEMES_KEYS","values","MethodFilter","bigMenu","METHOD_FILTER","TestFilter","TEST_RESULTS","All","Passed","Failed","TEST_RESULT_VALUES","TEST_TYPES_VALUES","test_name","TEST_FILTER","testResult","InfoBox","CoverageInfoBox","getSHA","getAuthor","toISOString","MethodInfoBox","TestInfoBox","CustomPopover","setAnchor","title","onFilterClick","onHistoryClick","secondaryBtn","primaryBtn","Popover","Boolean","open","anchorEl","onClose","anchorOrigin","vertical","horizontal","transformOrigin","sz","fontSize","appearance","CommitPopover","MethodPopover","MatrixVisualizationWithLoading","LoadingComponent","useLoading","onLoadDiv","Morpheus","getLabels","twoColumn","METHOD_COOCCURENCE","__data__","TEST_COEXECUTED","event","preventDefault","getPopover","label_type","App","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1740c315.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__1G6Wy\",\"social\":\"Footer_social__PMSlF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"onLoadDiv\":\"Morpheus_onLoadDiv__2mnlM\",\"twoColumn\":\"Morpheus_twoColumn__28gIi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Navbar_header__1xb0K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"toolbar\":\"Toolbar_toolbar__2qWyD\",\"bigMenu\":\"Toolbar_bigMenu__DBEFr\",\"mediumMenu\":\"Toolbar_mediumMenu__1LSwB\",\"mediumButton\":\"Toolbar_mediumButton__3EbIc\"};","import React from 'react';\nimport styles from './Footer.module.scss';\n\nconst Footer = () => {\n    return (\n        <div className={styles.footer}>\n\n            <div className={styles.social}> \n                <a href=\"http://spideruci.org\"><img alt=\"spideruci.org\" src=\"spider_circle_red.svg\" /></a>\n                <a href=\"https://github.com/spideruci\"><img alt=\"github.com/spideruci\" src=\"./GitHub-Mark-32px.png\" /></a>\n            </div>\n        </div>    \n    )\n}\n\nexport default Footer;","import React from \"react\";\nimport \"./Navbar.module.scss\";\nimport { Link } from \"react-router-dom\";\n\nconst Navbar = () => {\n  return (\n    <nav>\n      <Link to=\"/\">\n        <div className='header'>\n          <h1>Morpheus</h1>\n        </div>\n      </Link>\n      <ul>\n        <li>\n          <Link to=\"/about\">About</Link>\n        </li>\n        <li>\n          <Link to=\"/morpheus\">Visualization</Link>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","import React, { useState, useEffect } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport axios from 'axios'\nimport './About.scss';\n\nconst About = () => {\n    let [ content, setContent ] = useState(null)\n\n    useEffect(() => {\n        axios.get(`${process.env.PUBLIC_URL}/content/about.md`)\n            .then(res => res.data)\n            .then(md_content => setContent(md_content))\n            .catch(console.error);\n        }\n    )\n    return (\n        <div className=\"content-wrapper\">\n            <ReactMarkdown source={content} />\n        </div>\n    )\n}\n\nexport default About;\n","import { useState, useEffect } from 'react';\n\nconst sortCoverage = (coverage, state) => {\n    const {x, y, edges} = coverage;\n    const { sort } = state;\n    \n    if (sort.x === undefined || sort.y === undefined) {\n        return coverage;\n    }\n\n    let sortedCoverage = {\n        x: sort.x.func([...x], coverage, state),\n        y: sort.y.func([...y], coverage, state),\n        edges: [...edges]\n    }\n    return sortedCoverage;\n}\n\nconst filterCoverage = (coverage, state) => {\n    const { filters } = state;\n\n    let filteredCoverage = {\n        x: [...coverage.x],\n        y: [...coverage.y],\n        edges: [...coverage.edges]\n    }\n\n    for (const [, filterEntry] of Object.entries(filters)) {\n        filteredCoverage = filterEntry(filteredCoverage, coverage);\n    }\n\n    return filteredCoverage;\n}\n\nexport const useProcessCoverage = (state) => {\n    const [coverage, setCoverage] = useState(state);\n\n    useEffect(() => {\n        let processedCoverage = filterCoverage(sortCoverage(state.coverage, state), state);\n\n        setCoverage(processedCoverage);\n    }, [\n        state,\n        state.coverage.x,\n        state.coverage.y,\n        state.coverage.edges,\n        state.sort.x,\n        state.sort.y,\n        state.filters\n    ])\n\n    return coverage;\n}","import React, { Component } from 'react';\nimport { axisTop, axisLeft } from 'd3-axis';\nimport { scalePoint } from 'd3-scale';\nimport { select } from 'd3-selection';\nimport { transition } from 'd3-transition';\nimport { easeLinear } from 'd3-ease';\n// import { isEqual } from 'lodash';\nimport { zoom } from 'd3-zoom';\n\nclass MatrixVisualization extends Component {\n    constructor(props) {\n        super();\n\n        this.ref = React.createRef();\n\n        this.state = {\n            width: 0,\n            height: 0,\n        }\n\n        this.margin = {\n            top: 50,\n            left: 50,\n            right: 0,\n            bottom: 0\n        }\n\n        this.labelToggle = props.hasOwnProperty('labelToggle') ? props['labelToggle'] : false;\n\n        this.createMatrix = this.createMatrix.bind(this);\n        this.createTestMatrixView = this.createTestMatrixView.bind(this);\n        this.update = this.update.bind(this);\n\n        // Set all methods passed through properties here (we don't use bind because we want to make use of the parent this object.)\n        this.onXClick = props.onXClick;\n        this.onYClick = props.onYClick;\n        this.onRightClick = props.onRightClick;\n    }\n\n    createMatrix() {\n        const current = {\n            x: this.props.coverage.x,\n            y: this.props.coverage.y,\n            edges: this.props.coverage.edges,\n        }\n\n        if (current.x.length === 0 || current.y.length === 0) {\n            return {\n                x_labels: [],\n                y_labels: [],\n                nodes: []\n            };\n        }\n\n        return {\n            x_labels: current.x,\n            y_labels: current.y,\n            nodes: current.edges\n        };\n    }\n\n    componentDidMount() {\n        const width = this.ref.current.parentElement.offsetWidth;\n        const height = this.ref.current.parentElement.offsetHeight;\n        if (this.state.width !== width || this.state.height !== height) {\n            this.setState({\n                width: width,\n                height: height,\n            }, this.update)\n        }\n\n        window.addEventListener(\"resize\", () => {\n            if (this.ref.current === null) {\n                return;\n            }\n            this.setState({\n                width: this.ref.current.parentElement.offsetWidth,\n                height: this.ref.current.parentElement.offsetHeight\n            }, this.update)\n        });\n\n        this.createTestMatrixView();\n    }\n\n    // TODO how to update visualization, when only a function changes, e.g., Edge.prototype.getColor.\n    componentDidUpdate(prevProps, prevState, snapshot) {\n    //     if ((!isEqual(prevProps.coverage.x, this.props.coverage.x)) || (!isEqual(prevProps.coverage.y, this.props.coverage.y)) ) {\n    //         this.labelToggle = this.props.labelToggle;\n    //         this.onXClick = this.props.onXClick;\n    //         this.onYClick = this.props.onYClick;\n            this.update()\n    //     }\n    }\n\n    update () {\n        const node = this.ref.current;\n        let svg = select(node);\n\n        let data = this.createMatrix();\n\n        // Update viewBox to the state width and height\n        // the viewbox for the SVG is essentially it's viewport.\n        // pratically, this defines the on-screen dimensions wihtin which\n        // the user can pan around the matrix. Note: the actual dimensions\n        // of the matrix will be relative to this viewBox and can be bigger/\n        // smaller then these dimensions.\n        svg.attr(\"viewBox\", [0, 0, this.state.width, this.state.height]);\n\n        // basic D3 incantations to enable zoom in the SVG element.\n        let zoomFun = zoom().on('zoom', e => {\n            select('svg g').attr('transform', e.transform);\n        });\n\n        svg.call(zoomFun);\n\n        // this sets the preliminary position of the SVG: scale at 100%, and set top left corner to 0,0.\n        select('svg g').attr('transform', 'translate(0,0) scale(1.0)');\n\n        // compute the dimensions of the matrix itself\n        // this can be smaller than the SVG's viewbox.\n        var unitSide = 0;\n        if (data.x_labels.length >= data.y_labels.length) {\n            unitSide = (1.0 * this.state.width) / data.x_labels.length\n        }\n        else {\n            unitSide = (1.0 * this.state.height) / data.y_labels.length\n        }\n\n        // To adapt width and height perfectly with the canvas' dimensions\n        // just set w and h to state.width and .height respectively.\n        // TODO: ideally expose this as a user pref with a checkbox in the GUI.\n        let w = data.x_labels.length * unitSide; // this.state.width\n        let h = data.y_labels.length * unitSide; // this.state.height\n\n        let vis_width = w - this.margin.left - this.margin.right - 10;\n        let vis_height = h - this.margin.top - this.margin.bottom - 10;\n\n        // Scales for X-axis\n        let xScale = scalePoint()\n            .padding(0.5)\n            .range([0, vis_width])\n            .domain(data.x_labels.map(label => label.getID()));\n\n        // Scales for Y-axis\n        let yScale = scalePoint()\n            .padding(0.5)\n            .range([0, vis_height])\n            .domain(data.y_labels.map(label => label.getID()));\n\n        // Create tick format function, returns a function using the passed parameters.\n        function createTickFormatter(labelToggle, labelInterval) {\n            return  (label, i) => {\n                label = \"\";  \n                if (!labelToggle) {\n                    label = \"\";   \n                }\n\n                return i % labelInterval !== 0 ? \" \" : label;\n            }\n        }\n\n        // Tooltip\n        let tooltip = svg.select(\".tooltip\").style(\"visibility\", 'visible');\n\n        tooltip.append(\"text\")\n            .attr(\"id\", \"tooltip-text\")\n            .attr(\"dominant-baseline\", \"auto\")\n            .attr(\"text-anchor\", \"start\")\n            .attr(\"stroke\", \"grey\")\n            .attr(\"stroke-opacity\", \"0.3\")\n            .attr(\"stroke-width\", \"5\")\n            .attr(\"fill\", \"black\")\n            .style(\"font-size\", \"12px\")\n            .style(\"opacity\", 0)\n            .html(\"\");\n    \n        function mouseover(d) {\n            tooltip.select(\"text\").style(\"opacity\", 1)\n            select(this).style(\"stroke\", \"black\")\n        }\n\n        function mousemove() {\n            let self = select(this);\n            let datum = self.datum();\n\n            let label = \"\";\n            if (datum.x === undefined) {\n                label = datum.toString();\n            }\n            else {\n                label = edgeLabel(datum);\n            }\n\n            tooltip.select(\"text\")\n                .attr(\"x\", parseFloat(select(this).attr(\"x\")) + 60)\n                .attr(\"y\", parseFloat(select(this).attr(\"y\")) + 45)\n                .text(label)\n        }\n\n        function mouseleave(d) {\n            tooltip.select(\"text\").style(\"opacity\", 0);\n            select(this).style(\"stroke\", \"none\");\n        }\n\n        function edgeLabel(d) {\n            let xLabelObject = data.x_labels.find(e => e.getID() === d.x);\n\n            let xLabel = xLabelObject.toString()\n\n            let yLabelObject = data.y_labels.find(e => e.getID() === d.y);\n            let yLabel = yLabelObject.toString()\n            \n            return `${xLabel} tested by ${yLabel}`;\n        }\n\n        // Create both axis\n        const max_labels = 20;\n        const x_tick_interval = data.x_labels.length <= max_labels ? 1 : data.x_labels.length / max_labels;\n        const y_tick_interval = data.y_labels.length <= max_labels ? 1 : data.x_labels.length / max_labels;\n\n        const x_toggle = data.x_labels.length <= max_labels && this.labelToggle;\n        const y_toggle = data.y_labels.length <= max_labels && this.labelToggle;\n\n        let xAxis = axisTop()\n            .tickFormat(createTickFormatter(x_toggle, x_tick_interval))\n            .scale(xScale);\n\n        let yAxis = axisLeft()\n            .tickFormat(createTickFormatter(y_toggle, y_tick_interval))\n            .scale(yScale);\n\n        const t = transition()\n            .duration(0)\n            .ease(easeLinear);\n\n        let rectWidth = xScale.step()\n        let rectHeight = yScale.step()\n\n        let matrixNodes = select(\"g.testmatrix\")\n                .attr(\"transform\", `translate(${this.margin.left}, ${this.margin.top})`)\n                .selectAll('.cell')\n                .data(data.nodes)\n                .join(\n                    enter => enter.append(\"rect\").call(enter => enter\n                        .transition(t)\n                            .attr(\"x\", (d) => xScale(d.getX()) - rectWidth/2)\n                        .transition(t)\n                            .attr(\"y\", (d) => yScale(d.getY()) - rectHeight/2)\n                    ),\n                    update => update.call(update => update\n                        .transition(t)\n                            .attr(\"x\", (d) => xScale(d.getX()) - rectWidth / 2)\n                        .transition(t)\n                            .attr(\"y\", (d) => yScale(d.getY()) - rectHeight / 2)\n                    ),\n                    exit => exit.remove()\n                )\n                .attr(\"class\", \"cell\")\n                .attr(\"fill\", (d) => d.getColor())\n                .attr(\"width\", rectWidth)\n                .attr(\"height\", rectHeight)\n                .attr(\"rx\", Math.max(1, xScale.step()/2))\n                .attr(\"stroke\", (d) => d.getProperty('highlight') ? 'black' : null)\n                .attr(\"stoke-width\", (d) => d.getProperty('highlight') ? '1px' : '0px')\n                .on(\"mouseover\", mouseover)\n                .on(\"mousemove\", mousemove)\n                .on(\"mouseleave\", mouseleave);\n        \n        matrixNodes.selectAll(\"*\").remove();\n        matrixNodes.append(\"title\")\n                    .text(edgeLabel);\n\n        // Add X and Y axis to the visualization\n        select(\"g.x-axis\")\n            .attr(\"transform\", `translate(${this.margin.left}, ${this.margin.top})`)\n            .call(xAxis)\n            .selectAll(\"line\")\n            .style(\"stroke\", \"white\")\n            .style(\"stroke-width\", \"0.0\");\n        \n        select(\"g.x-axis\")\n            .select(\"path\")\n            .style(\"stroke\", \"grey\")\n            .style(\"stroke-width\", \"0.5\");\n\n        // Add rectangular ticks\n\n        let tickWidth = rectWidth - (0.1 * rectWidth);\n        \n        let xTickLength = (d) => {\n            const tickId = d.id;\n            return data.nodes.filter((e) => e.x === tickId).length\n        };\n\n        select(\"g.x-axis\")\n            .selectAll('.axis-dots-x')\n            .data(data.x_labels)\n            .join(\n                enter => enter.append('rect').call(enter => enter\n                    .attr('x', d => `${xScale(d.getID()) - (tickWidth/2)}px`)\n                ),\n                update => update.call(update => update\n                    .attr('x', (d) => `${xScale(d.getID()) - (tickWidth/2)}px`)\n                ),\n                exit => exit.remove()\n            )\n            .attr(\"class\", \"axis-dots-x\")\n            .attr('y', (d) => -(xTickLength(d)))\n            .attr('height', xTickLength)\n            .attr('width', tickWidth)\n            .style('stroke', 'black')\n            .style('stroke-width', '0.0')\n            .style('fill', (d) => d.getColor())\n            .on('click', this.onXClick)\n            .on('contextmenu', this.onRightClick)\n            .on(\"mouseover\", mouseover)\n            .on(\"mousemove\", mousemove)\n            .on(\"mouseleave\", mouseleave);\n        \n        select(\"g.y-axis\")\n            .attr(\"transform\", `translate(${this.margin.left}, ${this.margin.top})`)\n            .call(yAxis)\n            .selectAll(\"line\")\n            .style(\"stroke\", \"white\")\n            .style(\"stroke-width\", \"0.0\");\n\n        select(\"g.y-axis\")\n            .select(\"path\")\n            .style(\"stroke\", \"grey\")\n            .style(\"stroke-width\", \"0.5\");\n\n        let tickHeight = rectHeight - (0.1 * rectHeight);\n\n        let yTickLength = (d) => {\n            const tickId = d.id;\n            return data.nodes.filter((e) => e.y === tickId).length\n        };\n\n        select(\"g.y-axis\")\n            .selectAll('.axis-dots-y')\n            .data(data.y_labels)\n            .join(\n                enter => enter.append('rect').call(enter => enter\n                    .attr('y', d => {\n                        return `${yScale(d.getID()) - (tickHeight/2)}px`\n                    })\n                ),\n                update => update.call(update => update\n                    .attr('y', (d) => `${yScale(d.getID()) - (tickHeight/2)}px`)\n                ),\n                exit => exit.remove()\n            )\n            .attr(\"class\", \"axis-dots-y\")\n            .attr('x', (d) => -(yTickLength(d)))\n            .attr('width', yTickLength)\n            .attr('height', tickHeight)\n            .style('stroke', 'black')\n            .style('stroke-width', '0')\n            .style('fill', (d) => d.getColor())\n            .on('click', this.onYClick)\n            .on('contextmenu', this.onRightClick)\n            .on(\"mouseover\", mouseover)\n            .on(\"mousemove\", mousemove)\n            .on(\"mouseleave\", mouseleave);\n\n        // text label for the x axis\n        svg.select(\".xlabel\")\n            .attr(\"x\", this.state.width / 2)\n            .attr(\"y\", 11)\n            .style(\"text-anchor\", \"middle\")\n            .text(this.props.xLabel);\n\n        // text label for the y axis\n        svg.select(\".ylabel\")\n            .attr(\"transform\", \"rotate(-90)\")\n            .attr(\"y\", 1)\n            .attr(\"x\", -this.state.height / 2)\n            .attr(\"dy\", \"0.7em\")\n            .style(\"text-anchor\", \"middle\")\n            .text(this.props.yLabel);\n    }\n\n    createTestMatrixView() {\n        const node = this.ref.current;\n\n        let svg = select(node);\n        svg.attr(\"viewBox\", [0, 0, this.state.width, this.state.height]);\n\n        let g = svg.append(\"g\");\n\n        g.append(\"g\").attr(\"class\", \"x-axis\");\n        g.append(\"g\").attr(\"class\", \"y-axis\");\n        g.append(\"g\").attr(\"class\", \"testmatrix\");\n        g.append(\"g\").attr(\"class\", \"tooltip\");\n\n        // Create empty labels, they are updated within the update function.\n        svg.append(\"text\").attr(\"class\", \"xlabel\");\n        svg.append(\"text\").attr(\"class\", \"ylabel\");\n    }\n\n    render() {\n        return (\n            <div style={{width: '100%', height:'100%'}}>\n                <svg ref={this.ref}></svg>\n            </div>\n        )\n    }\n}\n\nexport default MatrixVisualization;","export const API_ROOT = process.env.hasOwnProperty('REACT_APP_API_ENDPOINT') ? process.env.REACT_APP_API_ENDPOINT : 'http://localhost:8000';","import { json } from 'd3';\nimport { API_ROOT } from './api-config';\n\nconst STATIC_API = {\n    fetchProjects: () => `${process.env.PUBLIC_URL}/data/projects.json`,\n    fetchCommits: (project_id) => `${process.env.PUBLIC_URL}/data/projects/${project_id}/commits.json`,\n    fetchCoverage: (project_id, commit_id) => `${process.env.PUBLIC_URL}/data/coverage/projects/${project_id}/commits/${commit_id}.json`,\n    fetchTestHistory: (project_id, test_id) => `${process.env.PUBLIC_URL}/data/coverage/projects/${project_id}/tests/${test_id}.json`,\n    fetchMethodHistory: (project_id, method_id) => `${process.env.PUBLIC_URL}/data/coverage/projects/${project_id}/methods/${method_id}.json`\n}\n\nconst DYNAMIC_API = {\n    fetchProjects: () => `${API_ROOT}/projects`,\n    fetchCommits: (project_id) => `${API_ROOT}/projects/${project_id}/commits`,\n    fetchCoverage: (project_id, commit_id) => `${API_ROOT}/coverage/projects/${project_id}/commits/${commit_id}`,\n    fetchTestHistory: (project_id, test_id) => `${API_ROOT}/coverage/projects/${project_id}/tests/${test_id}`,\n    fetchMethodHistory: (project_id, method_id) => `${API_ROOT}/coverage/projects/${project_id}/methods/${method_id}`\n}\n\n\nconst debug_api = (api_endpoint) => {\n    console.debug(`[API_CALL]: ${api_endpoint}`);\n    return api_endpoint;\n}\n\nconst API = process.env.hasOwnProperty('REACT_APP_REST_API') ? DYNAMIC_API : STATIC_API;\n\nexport const fetchProjects = () => {\n    return json(debug_api(API.fetchProjects()))\n        .then((response) => {\n            return response.projects;\n        })\n        .catch(console.error);\n}\n\nexport const fetchCommits = (project_id) => {\n    return json(debug_api(API.fetchCommits(project_id)))\n        .then((response) => {\n            return response.commits;\n        })\n}\n\nexport const fetchCoverage = (project_id, commit_id) => {\n    return json(debug_api(API.fetchCoverage(project_id, commit_id)))\n        .then((response) => {\n            let methods = response.coverage.methods;\n            let tests = response.coverage.tests;\n            let edges = response.coverage.edges;\n\n            if (methods.length === 0 || tests.length === 0 || edges.length === 0) {\n                console.error(`Nothing to visualize, methods: ${methods.length}, tests: ${tests.length}, edges: ${edges.length}`)\n            }\n\n            return {\n                methods: methods,\n                tests: tests,\n                edges: edges\n            }\n        })\n        .catch(console.error);\n}\n\nexport const fetchTestHistory = (project_id, test_id) => {\n    return json(debug_api(API.fetchTestHistory(project_id, test_id)))\n        .then((response) => {\n            let methods = response.coverage.methods;\n            let commits = response.coverage.commits;\n            let edges = response.coverage.edges;\n\n            if (methods.length === 0 || commits.length === 0 || edges.length === 0) {\n                console.error(`Nothing to visualize, methods: ${methods.length}, commits: ${commits.length}, edges: ${edges.length}`)\n            }\n\n            return {\n                methods: methods,\n                commits: commits,\n                edges: edges\n            }\n        })\n        .catch(console.error);\n}\n\nexport const fetchMethodHistory = (project_id, method_id) => {\n    return json(debug_api(API.fetchMethodHistory(project_id, method_id)))\n        .then((response) => {\n            let tests = response.coverage.tests;\n            let commits = response.coverage.commits;\n            let edges = response.coverage.edges;\n\n            if (tests.length === 0 || commits.length === 0 || edges.length === 0) {\n                console.error(`Nothing to visualize, methods: ${tests.length}, commits: ${commits.length}, edges: ${edges.length}`)\n            }\n\n            return {\n                tests: tests,\n                commits: commits,\n                edges: edges\n            }\n        })\n        .catch(console.error);\n}","export class Project {\n    constructor(name, id) {\n        this.name = name;\n        this.id = id;\n    }\n\n    getProjectName = () => this.name;\n    getID = () => this.id;\n    toString = () => this.name;\n}\n\nexport class Edge {\n    constructor(x, y, properties = {}) {\n        this.x = parseInt(x);\n        this.y = parseInt(y);\n        this.properties = properties;\n    }\n\n    getX() { return this.x; };\n    getY() { return this.y; };\n    getColor() { return this.getProperty('test_result') ? '#03C03C' : \"#FF1C00\";};\n    toString() { return `<Edge x:${this.x}, y:${this.y}>`;}\n    getProperty(property) {\n        return property in this.properties ? this.properties[property] : null\n    };\n    setProperty(key, value) {\n        this.properties[key] = value\n    }\n}\n\nexport class Method {\n    constructor(id, packageName, className, methodName, methodDecl, filePath) {\n        this.id = parseInt(id);\n        this.packageName = packageName;\n        this.className = className;\n        this.methodName = methodName;\n        this.methodDecl = methodDecl;\n        this.filePath = filePath;\n    }\n\n    getID() { return this.id };\n    getColor() { return 'black'};\n    getPackageName() { return this.packageName};\n    getClassName() { return this.className};\n    getMethodName() { return this.methodDecl};\n    toString() { return `${this.packageName} ${this.className} ${this.methodDecl}`};\n}\n\nexport class Test {\n    constructor(id, packageName, className, testName) {\n        this.id = parseInt(id);\n        this.packageName = packageName;\n        this.className = className;\n        this.testName = testName;\n        this.properties = {};\n    }\n\n    getID() { return this.id };\n    getColor() { return 'black' };\n    getPackageName() { return this.packageName };\n    getClassName() { return this.className };\n    getMethodName() { return this.testName };\n    toString() { return `${this.packageName} ${this.className} ${this.testName}` };\n    getProperty(property) {\n        return property in this.properties ? this.properties[property] : null\n    };\n    setProperty(key, value) {\n        this.properties[key] = value\n    }\n}\n\nexport class Commit {\n    constructor(id, sha, date, author) {\n        this.id = id;\n        this.sha = sha;\n        this.date = new Date(date);\n        this.author = author;\n    }\n\n    getID() { return this.id };\n    getColor() { return 'black' };\n    getAuthor() { return this.author };\n    getDate() { return this.date };\n    getSHA() { return this.sha};\n    toString() {\n        const short_sha = this.sha.slice(this.sha.length - 7, this.sha.length);\n        const date = this.date.toDateString();\n        return `${short_sha}, ${date}`;\n    }\n}","export const HISTORY_ACTION = {\n    REDO: 'REDO',\n    UNDO: 'UNDO',\n    RESET: 'RESET'\n}\n\nexport const historyReducer = (reducer, initialState) => {\n    const historyState = {\n        past: [],\n        present: initialState,\n        future: []\n    }\n\n    const combinedReducer = (state = historyState, action) => {\n        const { past, present, future } = state;\n\n        switch (action.type) {\n            case HISTORY_ACTION.UNDO: {\n                const [newPresent, ...newPast] = past;\n\n                // First, is project selection, Second, commit selection, and 3 is setting coverage.\n                // TODO: Should be wrapped into one.\n                if (past.length === 3) {\n                    console.warn(\"No more history state\")\n                    return state;\n                }\n                return {\n                    past: newPast,\n                    present: newPresent,\n                    future: [present, ...future]\n                }\n            }\n\n            case HISTORY_ACTION.REDO: {\n                if (future.length < 1) {\n                    console.warn(\"No more future states to apply.\")\n                    return state;\n                }\n                const [newPresent, ...newFuture] = future;\n                return {\n                    past: [present, ...past],\n                    present: newPresent,\n                    future: newFuture\n                }\n            }\n\n            case HISTORY_ACTION.RESET: {\n                console.log(\"RESET\", state);\n                if (past.length <= 3) {\n                    console.warn(\"No state to return yet.\", state);\n                    return state\n                }\n\n                const newPast = past.slice(past.length-3 -1, past.length-1)\n                const newPresent = past[past.length - 3 -1];\n\n                return {\n                    past: newPast,\n                    present: newPresent,\n                    future: []\n                }\n            }\n            default: {\n                const newPresent = reducer(present, action)\n                if (present === newPresent) {\n                    return state;\n                }\n                return {\n                    past: [present, ...past],\n                    present: newPresent,\n                    future: []\n                }\n            }\n        }\n    }\n\n    return [historyState, combinedReducer];\n}","export function create_coverage_map(edges, get_key, get_value) {\n    let test_id_map = new Map()\n\n    edges.forEach(edge => {\n        const key = get_key(edge)\n        const value = get_value(edge)\n\n        if (test_id_map.has(key)) {\n            //  Get current Set of methods test covers\n            let method_ids = test_id_map.get(key)\n\n            // Add new method id to set and update map\n            method_ids.add(value)\n            test_id_map.set(key, method_ids)\n\n        } else {\n            let method_ids = new Set();\n            method_ids.add(value);\n            test_id_map.set(key, method_ids)\n        }\n    });\n    return test_id_map;\n}","import { create_coverage_map } from '../util/coverage_map';\n\nexport function sortMethodsByName (axis, current_state, all_data) {\n    return axis.sort((a, b) => a.toString() > b.toString())\n}\n\nexport function sortMethodsByCoverage(axis, current_state, all_data) {\n    const {edges} = current_state;\n\n    let x_map = create_coverage_map(edges, (e) => e.getX(), (e) => e.getY())\n\n    function sort_array(list, map) {\n        return list.sort((e1, e2) => {\n            const id1 = e1.getID();\n            const id2 = e2.getID();\n\n            const size1 = map.has(id1) ? map.get(id1).size : 0;\n            const size2 = map.has(id2) ? map.get(id2).size : 0;\n\n            if (size1 < size2) {\n                return 1;\n            }\n            else if (size1 > size2) {\n                return -1;\n            }\n            else {\n                return 0;\n            }\n        })\n    }\n    return sort_array(axis, x_map)\n}\n\nexport function sortMethodsBySuspiciousness(axis, current_state, all_data) {\n    // suspiciousness map\n    let suspciousness_map = new Map();\n\n    // Create Maps One method id to test id and one test id to test result\n    let x_map = create_coverage_map(all_data.coverage.edges, (e) => e.method_id, (e) => e.test_id)\n    let test_result_map = new Map()\n\n    // Create a map of testing results 'test_id' --> result\n    all_data.coverage.edges.forEach(edge => {\n        const id = edge.test_id;\n        const result = edge.getProperty(\"test_result\");\n        test_result_map.set(id, result)\n    });\n\n    // Compute the number tests passed/failed.\n    let total_tests_failed = 0;\n    let total_tests_passed = 0;\n\n    test_result_map.forEach((value, key) => {\n        console.log(value)\n        if (value) {\n            total_tests_passed += 1;\n        } else {\n            total_tests_failed += 1;\n        }\n    });\n\n    // Tarantula Suspiciousness calculation\n    function suspiciousness(method) {\n        let passed = 0;\n        let failed = 0;\n\n        if (!x_map.has(method.getID())) {\n            return -1;\n        }\n\n        let tests = x_map.get(method.getID())\n\n        // Compute passed/failed testcases\n        tests.forEach((test_id) => {\n            if (test_result_map.has(test_id) && test_result_map.get(test_id)) {\n                passed += 1;\n            } else {\n                failed += 1;\n            }\n        });\n\n        return (failed / total_tests_failed) / ((passed / total_tests_passed) + (failed / total_tests_failed))\n    }\n\n    // Sort based on suspiciosness of each test\n    function sort_array(list) {\n        return list.sort((e1, e2) => {\n            const s1 = suspciousness_map.get(e1.getID())\n            const s2 = suspciousness_map.get(e2.getID())\n\n            if (s1 < s2) {\n                return 1;\n            } else if (s1 > s2) {\n                return -1\n            } else {\n                return 0;\n            }\n        }\n        )\n    }\n\n    // If no test failed, or if all tests passed, then there is no information to compute suspiciousness.\n    if (total_tests_failed === 0 || total_tests_passed === all_data.coverage.y.length - 1) {\n        console.warn(\"No info to compute suspiciousness, so sort by methods name.\")\n        return sortMethodsByName(axis, current_state, all_data);\n    }\n\n    // Compute suspiciousness scores and sort axis.\n    all_data.coverage.x.forEach((elem) => {\n        suspciousness_map.set(elem.getID(), suspiciousness(elem));\n    });\n    return sort_array(axis);\n}\n\n","import { create_coverage_map } from '../util/coverage_map';\n\nexport function sortTestsByName(axis, current_state, all_data) {\n    return axis.sort((a, b) => a.toString() > b.toString())\n}\n\nexport function sortTestsByCoverage(axis, current_state, all_data) {\n    const { edges } = current_state;\n\n    let y_map = create_coverage_map(edges, (e) => e.getY(), (e) => e.getX())\n\n    function sort_array(list, map) {\n        return list.sort((e1, e2) => {\n            const id1 = e1.getID();\n            const id2 = e2.getID();\n\n            const size1 = map.has(id1) ? map.get(id1).size : 0;\n            const size2 = map.has(id2) ? map.get(id2).size : 0;\n\n            if (size1 < size2) {\n                return 1;\n            }\n            else if (size1 > size2) {\n                return -1;\n            }\n            else {\n                return 0;\n            }\n        })\n    }\n\n    return sort_array(axis, y_map);\n}","export function sortCommitsByName(current_state, all_data) {\n    return current_state.sort((a, b) => a.toString() > b.toString())\n}\n\nexport function sortCommitsByDate(current_state, all_data) {\n    return current_state.sort((a, b) => a.getDate() > b.getDate())\n}","import { Edge, Method, Test } from \"../api/MorpheusTypes\";\nimport { schemeSet3 } from \"d3-scale-chromatic\";\nimport { scaleOrdinal } from \"d3-scale\";\nimport { create_coverage_map } from \"../util/coverage_map\";\n\nexport const COLOR_SCHEMES = {\n    TEST_RESULT: 'Test Result',\n    TEST_TYPE: 'Test Type'\n}\n\n/*********************************************************************\n * Configuration functions\n ********************************************************************/\n\n/**\n * \n * @param {*} coverageType, Test, method, or coverage history. \n * @param {*} colorSet, What type of coloring scheme you want to use, e.g., test result or type.\n * @param {*} coverage, All coverage information\n */\nexport const setColorScheme = (colorScheme, coverageType,  currentCoverage, globalCoverage) => {\n    console.log(\"SET COLOR\", colorScheme, coverageType)\n    if (coverageType === \"COVERAGE\"){\n        if (colorScheme === COLOR_SCHEMES.TEST_RESULT || colorScheme === null) {\n            const {x, y, edges} = currentCoverage;\n            METHOD_COLOR_FUNCTIONS.package_name({methods: x});\n            TEST_COLOR_FUNCTIONS.package_name({tests: y});\n            EDGES_COLOR_FUNCTIONS.test_result({edges: edges});\n        }\n        else if (colorScheme === COLOR_SCHEMES.TEST_TYPE) {\n            const {x, y} = currentCoverage;\n            const test_type_map = createTestTypeMap(globalCoverage, currentCoverage);\n\n            METHOD_COLOR_FUNCTIONS.package_name({methods: x});\n            TEST_COLOR_FUNCTIONS.package_name({tests: y});\n            EDGES_COLOR_FUNCTIONS.test_type({test_type_map: test_type_map});\n        }\n    }\n    else if (coverageType === \"METHOD_HISTORY\"){\n        const {y, edges} = currentCoverage;\n        TEST_COLOR_FUNCTIONS.package_name({tests: y});\n        EDGES_COLOR_FUNCTIONS.test_result({edges: edges});\n    }\n    else if (coverageType === \"TEST_HISTORY\"){\n        const {y, edges} = currentCoverage;\n        METHOD_COLOR_FUNCTIONS.package_name({methods: y});\n        EDGES_COLOR_FUNCTIONS.test_result({edges: edges});   \n    }\n    else {\n        console.warn(`Coverage type ${coverageType} not found...`)\n    }\n}\n\n/*********************************************************************\n * Color scheme functions\n ********************************************************************/\n\nconst METHOD_COLOR_FUNCTIONS = {\n    package_name: ({methods}) => {\n        if (methods.length > 0 && methods[0].constructor.name === Method.name) {\n            let unique_method_packages = new Set(methods.map((method) => method.getPackageName()));\n            const colorX = (d) => {\n                const scale = scaleOrdinal(schemeSet3).domain(Array.from(unique_method_packages));\n                return scale(d);\n            }\n\n            Method.prototype.getColor = function () {\n                return colorX(this.getPackageName());\n            };\n        }\n    }\n}\n\nconst TEST_COLOR_FUNCTIONS = {\n    package_name: ({tests}) => {\n        if (tests.length > 0 && tests[0].constructor.name === Test.name) {\n            let unique_tests_packages = new Set(tests.map((test) => test.getPackageName()));\n            const colorY = (d) => {\n                const scale = scaleOrdinal(schemeSet3).domain(Array.from(unique_tests_packages));\n                return scale(d);\n            }\n\n            Test.prototype.getColor = function () {\n                return colorY(this.getPackageName());\n            };\n        }\n    },\n    test_type: ({test_type_map}) => {\n        Test.prototype.getColor = function() {\n            switch (test_type_map.get(this.getID())) {\n                case \"S\":\n                    return \"#0575eb\";\n                case \"I\":\n                    return \"#eb8c06\";\n                case \"U\":\n                    return \"#02ae5e\";\n                default:\n                    return \"black\";\n            }\n        }\n    }\n}\n\nconst EDGES_COLOR_FUNCTIONS = {\n    test_result: ({edges}) => {\n        if (edges.length > 0 && edges[0].constructor.name === Edge.name) {\n            Edge.prototype.getColor = function () {\n                return this.getProperty('test_result') ? '#03C03C' : '#FF1C00'\n            };\n        }\n    },\n    test_type: ({test_type_map}) => {\n        Edge.prototype.getColor = function() {\n            switch (test_type_map.get(this.getY())) {\n                case \"S\":\n                    return \"#0575eb\";\n                case \"I\":\n                    return \"#eb8c06\";\n                case \"U\":\n                    return \"#02ae5e\";\n                default:\n                    return \"black\";\n            }\n        }\n    }\n}\n\n/******************************************\n * Helper functions\n *****************************************/\n\nfunction createTestTypeMap(global, current) {\n    const {edges} = global;\n\n    let {x, y} = current;\n\n    let newX = [];\n\n    for (const element of x) {\n        element.boo = Math.random();\n        newX.push(element)\n    }\n\n    const test_to_meth_map = create_coverage_map(edges, e => e.getY(), e => e.getX())\n\n    let test_id_to_type_map = new Map();\n\n    let map_method_id = new Map();\n    x.forEach((m) => {\n        map_method_id.set(m.getID(), m)\n    })\n\n    y.forEach(function(t, index, array) {\n        const test_id = t.getID();\n        const method_ids = test_to_meth_map.get(test_id)\n        let package_set = new Set();\n        let class_set = new Set();\n\n        method_ids.forEach((id) => {\n            const method = map_method_id.get(id);\n            if (method === undefined) {\n                return;\n            }\n            let package_name = method.getPackageName();\n            let class_name = method.getClassName();\n            package_set.add(package_name)\n            class_set.add(`${package_name}.${class_name}`)\n        });\n\n        if (package_set.size > 1) {\n            test_id_to_type_map.set(t.getID(), \"S\");\n        }\n        else if (package_set.size === 1 && class_set.size > 1) {\n            test_id_to_type_map.set(t.getID(), \"I\");\n        }\n        else if (class_set.size === 1) {\n            test_id_to_type_map.set(t.getID(), \"U\");\n        }\n    });\n\n    return test_id_to_type_map;\n}","import { useReducer, useEffect } from 'react';\nimport { fetchCoverage, fetchTestHistory, fetchMethodHistory } from '../logic/api/morpheusAPIv2';\nimport { historyReducer } from './useHistoryReducer';\nimport { Edge, Method, Test, Commit } from '../logic/api/MorpheusTypes';\nimport { sortMethodsByName } from '../logic/sorting/methods';\nimport { sortTestsByName } from '../logic/sorting/tests';\nimport { sortCommitsByDate } from '../logic/sorting/commits';\nimport { COLOR_SCHEMES } from '../logic/coloring/useColors';\n\nexport const MORPHEUS_ACTION = {\n    LOADING: 'LOADING',\n\n    SET_PROJECT: 'SET_PROJECT',\n    SET_COMMIT: 'SET_COMMIT',\n    SET_COLOR_SCHEME: 'SET_COLOR_SCHEME',\n    SET_METHOD_HISTORY: 'SET_METHOD_HISTORY',\n    SET_TEST_HISTORY: 'SET_TEST_HISTORY',\n\n    SET_SORT: 'SET_SORT',\n    ADD_FILTER: 'ADD_FILTER',\n\n    SET_COVERAGE: 'SET_COVERAGE',\n\n    POP_UP: 'POP_UP'\n}\n\nconst morpheusReducer = (state, action) => {\n    console.log(\"MORPHEUS REDUCER\", state, action);\n    switch (action.type) {\n        case MORPHEUS_ACTION.LOADING:\n            return { ...state };\n        case MORPHEUS_ACTION.SET_PROJECT: \n            console.log(MORPHEUS_ACTION.SET_PROJECT, state, action)\n            return {\n                ...state,\n                info: {\n                    ...state.info,\n                    project: action.project,\n                }\n            };\n\n        case MORPHEUS_ACTION.SET_COMMIT:\n            console.log(MORPHEUS_ACTION.SET_COMMIT, state, action)\n            return {\n                ...state,\n                info: {\n                    ...state.info,\n                    type: 'COVERAGE',\n                    commit: action.commit,\n                },\n                color_scheme: COLOR_SCHEMES.TEST_RESULT\n            };\n        case MORPHEUS_ACTION.SET_METHOD_HISTORY:{\n            let info = {\n                type: 'METHOD_HISTORY',\n                method: action.state.info.label,\n                project: state.info.project\n            }\n\n            return {\n                ...state,\n                info: {\n                    ...info\n                },\n                pop_up: {\n                    isVisible: false,\n                    label: null,\n                    anchor: null,\n                }\n            }\n        }\n        case MORPHEUS_ACTION.SET_TEST_HISTORY:{\n            let info = {\n                type: 'TEST_HISTORY',\n                test: action.state.info.label,\n                project: state.info.project\n            }\n\n            return {\n                ...state,\n                info: {\n                    ...info\n                },\n                pop_up: {\n                    isVisible: false,\n                    label: null,\n                    anchor: null,\n                }\n            }\n        }\n        case MORPHEUS_ACTION.SET_SORT:\n            console.log(MORPHEUS_ACTION.SET_SORT, state, action)\n            return {\n                ...state, \n                sort: {\n                    ...state.sort,\n                    ...action\n                }\n            }\n\n        case MORPHEUS_ACTION.ADD_FILTER:\n            console.log(MORPHEUS_ACTION.ADD_FILTER, state, action)\n            return {\n                ...state,\n                filters: {\n                    ...state.filters,\n                    ...action.filters\n                }\n            }\n\n        case MORPHEUS_ACTION.SET_COVERAGE:\n            console.log(MORPHEUS_ACTION.SET_COVERAGE, action, state)\n\n            let x_func = {\n                name: 'NAME',\n                func: sortMethodsByName\n            }\n            const y_func = {\n                name: 'NAME',\n                func: sortTestsByName\n            }\n\n            if ((state.info.type === 'METHOD_HISTORY') || (state.info.type === 'TEST_HISTORY')) {\n                x_func ={\n                    name: 'DATE',\n                    func: sortCommitsByDate\n                }\n            }\n\n            let new_state = {\n                ...state,\n                ...action.state,\n                coverage: {\n                    ...action.state.coverage,\n                },\n                sort: {\n                    x: x_func,\n                    y: y_func,\n                },\n                pop_up: {\n                    isVisible: false,\n                    label: null,\n                    anchor: null,\n                }\n            };\n            return new_state\n        case MORPHEUS_ACTION.POP_UP:\n            console.log(MORPHEUS_ACTION.POP_UP, action, state)\n            return {\n                ...state,\n                pop_up: {\n                    ...action.pop_up\n                }\n            }\n        case MORPHEUS_ACTION.SET_COLOR_SCHEME:\n            console.log(MORPHEUS_ACTION.SET_COLOR_SCHEME, action, state)\n            return {\n                ...state,\n                color_scheme: action.color_scheme\n            }\n        default:\n            console.log('DEFAULT RETURN state', state);\n            return state;\n    }\n}\n\nconst parseCoverage = ({methods, tests, edges}) => {\n    return {\n        x: methods.map((m) => new Method(m.id, m.package_name, m.class_name, m.method_name, m.method_decl, m.file_path)),\n        y: tests.map((t) => new Test(t.id, t.package_name, t.class_name, t.method_name)),\n        edges: edges.map((e) => new Edge(e.method_id, e.test_id, { test_result: e.test_result})),\n    }\n}\n\nconst parseMethodHistory = ({ commits, tests, edges }) => {\n    return {\n        x: commits.map((c) => new Commit(c.id, c.sha, c.datetime, c.author)),\n        y: tests.map((t) => new Test(t.id, t.package_name, t.class_name, t.method_name)),\n        edges: edges.map((e) => new Edge(e.commit_id, e.test_id, { test_result: e.test_result })),\n    }\n}\n\nconst parseTestHistory = ({ methods, commits, edges }) => {\n    return {\n        x: commits.map((c) => new Commit(c.id, c.sha, c.datetime, c.author)),\n        y: methods.map((m) => new Method(m.id, m.package_name, m.class_name, m.method_name, m.method_decl, m.file_path)),\n        edges: edges.map((e) => new Edge(e.commit_id, e.method_id, { test_result: e.test_result })),\n    }\n}\n\n\nexport const useMorpheusController = (initialState) => {\n\n    const [intialState, reducer] = historyReducer(morpheusReducer, initialState);\n    const [state, dispatch] = useReducer(reducer, intialState);\n    const { present } = state;\n\n    useEffect(() => {\n        const { type, project } = present.info;\n        switch (type) {\n            case 'COVERAGE':{\n                const { commit } = present.info;\n\n                fetchCoverage(project.getID(), commit.getID())\n                    .then(parseCoverage)\n                    .then((coverage) => {\n                        dispatch({\n                            type: MORPHEUS_ACTION.SET_COVERAGE,\n                            state: {\n                                isLoading: false,\n                                coverage: coverage\n                            }\n                        })\n                    })\n                    .catch(console.error);\n                break;\n            }\n            case 'TEST_HISTORY':{\n                const { test } = present.info;\n                fetchTestHistory(project.getID(), test.getID())\n                    .then(parseTestHistory)\n                    .then((coverage) => {\n                        dispatch({\n                            type: MORPHEUS_ACTION.SET_COVERAGE,\n                            state: {\n                                isLoading: false,\n                                coverage: coverage\n                            }\n                        })\n                    })\n                    .catch(console.error);\n                break;\n            }\n            case 'METHOD_HISTORY': {\n                const { method } = present.info;\n                fetchMethodHistory(project.getID(), method.getID())\n                    .then(parseMethodHistory)\n                    .then((coverage) => {\n                        dispatch({\n                            type: MORPHEUS_ACTION.SET_COVERAGE,\n                            state: {\n                                isLoading: false,\n                                coverage: coverage\n                            }\n                        })\n                    })\n                    .catch(console.error);\n                break;\n            }\n            default:\n                return;\n        }\n    }, [\n            present.info,\n            present.info.project,\n            present.info.commit\n    ]);\n\n    return [state, dispatch];\n};\n","import React, { createContext, useContext } from 'react';\nimport { useMorpheusController } from '../hooks/useMorpheusReducer'\nimport { sortMethodsByName } from '../logic/sorting/methods';\nimport { sortTestsByName } from '../logic/sorting/tests';\n\nexport const initialState = {\n\n    isLoading: true,\n    info: {\n        type: 'DEFAULT',\n        project: null,\n    },\n    pop_up: {\n        isVisible: false,\n        label: null,\n        anchor: null,\n    },\n    filters: {},\n    color_scheme: null,\n    sort: {\n        x: {\n            name: 'NAME',\n            func: sortMethodsByName\n        },\n        y: {\n            name: 'NAME',\n            func: sortTestsByName\n        },\n    },\n    coverage: {\n        x: [],\n        y: [],\n        edges: []\n    }\n}\n\nexport const MorpheusContext = createContext(null);\n\nexport const MorpheusProvider = (props) => {\n    const [state, dispatch] = useMorpheusController(initialState);\n\n    return (\n        <MorpheusContext.Provider\n            value={{\n                state: state.present,\n                dispatch: dispatch,\n            }}>\n            {props.children}\n        </MorpheusContext.Provider>\n    )\n}\n\nexport const useMorpheusContext = () => {\n    const context = useContext(MorpheusContext);\n\n    if (!context)  {\n        throw new Error(\"useMorpheusContext must be used within a MorpheusProvider\");\n    }\n    return context;\n}","import { create_coverage_map } from '../util/coverage_map';\n\nexport const filterByCoOccurence = (method) => {\n    return (coverage, globalCoverage) => {\n        const {x, y, edges} = coverage;\n        let filterX = x.find(m => m.getMethodName() === method.getMethodName());\n\n        if (filterX === undefined) {\n            return coverage;\n        }\n        \n        const yIDs = edges.filter((edge) => edge.getX() === parseInt(filterX.getID()))\n            .map((edge) => edge.getY());\n\n        const filteredY = y.filter(yElem => yIDs.includes(parseInt(yElem.getID())));\n        const filteredYIds = filteredY.map(elem => parseInt(elem.getID()));\n\n        const filteredEdges = edges.filter(edge => filteredYIds.includes(edge.getY()));\n\n        const filteredXIds = filteredEdges.map(edge => edge.getX());\n\n        const filteredX = x.filter(xElem => filteredXIds.includes(parseInt(xElem.getID())));\n\n        return {\n            x: filteredX,\n            y: filteredY,\n            edges: filteredEdges,\n        }\n    }\n}\n\nexport const filterByTestResult = (testResult) => {\n    return (coverage, globalCoverage) => {\n        const { x, y, edges } = coverage;\n        if (typeof testResult !== \"boolean\") {\n            return coverage;\n        }\n\n        const new_edges = edges.filter((edge) => edge.getProperty(\"test_result\") === testResult);\n        const test_ids = new_edges.map(edge => parseInt(edge.getY()))\n\n        const newY = y.filter((test) => test_ids.includes(parseInt(test.getID())))\n\n        return {\n            x: x,\n            y: newY,\n            edges: new_edges,\n        }\n    }\n}\n\nexport const TEST_TYPES = {\n    ALL: 'All',\n    UNIT: 'Unit',\n    INTEGRATION: 'Integration',\n    SYSTEM: 'System',\n}\n\nexport const filterByTestType = (testType) => {\n    return (coverage, globalCoverage) => {\n        let filter_type;\n        switch (testType) {\n            case TEST_TYPES.UNIT:\n                filter_type = (p, c) => c.size === 1;\n                break;\n            case TEST_TYPES.INTEGRATION:\n                filter_type = (p, c) => p.size === 1 && c.size > 1\n                break;\n            case TEST_TYPES.SYSTEM:\n                filter_type = (p, c) => p.size > 1;\n                break;\n            default:\n                return coverage;\n        }\n        return test_type_filter(coverage, globalCoverage, filter_type);\n    }\n}\n\nfunction test_type_filter(current_state, all_data, is_of_test_type) {\n    const { x, y, edges } = current_state;\n\n    const create_id_map = (objectList) => {\n        let object_id_map = new Map();\n        objectList.forEach((x) => {\n            object_id_map.set(x.getID(), x);\n        })\n        return object_id_map;\n    };\n\n    let map_method_id = create_id_map(x);\n    \n    const y_to_x_map = create_coverage_map(all_data.edges, e => e.getY(), e => e.getX())\n    let new_tests, new_edges, new_test_ids;\n\n    new_tests = y.filter((t) => {\n        const method_ids = y_to_x_map.get(t.getID())\n        let package_set = new Set();\n        let class_set = new Set();\n\n        method_ids.forEach((id) => {\n            const method = map_method_id.get(id);\n            if (method === undefined) {\n                return;\n            }\n            package_set.add(method.getPackageName())\n            class_set.add(`${method.getPackageName()}.${method.getClassName()}`)\n        });\n\n        return is_of_test_type(package_set, class_set);\n    });\n\n    new_test_ids = new_tests.map(test => test.getID());\n\n    new_edges = edges.filter((edge) => {\n        return new_test_ids.includes(edge.getY())\n    });\n\n    const x_covered = new_edges.map(e => e.getX());\n\n    let new_x = x.filter((x) => {\n        return x_covered.includes(x.getID())\n    });\n\n    return {\n        x: new_x,\n        y: new_tests,\n        edges: new_edges,\n    }\n}\n\nexport function filterByCoexecutedMethods(current_state, _, identifier) {\n    const current = current_state;\n\n    let methods = current.x;\n    let test_cases = current.y;\n    let edges = current.edges;\n\n    let filter_method = methods.find(m => m.toString().includes(identifier));\n\n    if (filter_method === undefined) {\n        filter_method = methods.find(m => m.getID() === parseInt(identifier));\n    }\n\n    if (filter_method === undefined) {\n        console.error(\"Filter Method was not found...\");\n        return current;\n    }\n\n    const filtered_method_id = filter_method.getID();\n\n    const test_ids = edges.filter(edge => filtered_method_id === edge.method_id)\n        .map(edge => edge.test_id);\n\n    const filtered_tests = test_cases.filter(test => test_ids.includes(test.test_id))\n\n    const filtered_edges = edges.filter(\n        edge => test_ids.includes(edge.test_id) || edge.method_id === filter_method.method_id)\n\n    filtered_edges.forEach((edge) => {\n        if (edge.method_id === filtered_method_id) {\n            edge.highlight = true;\n        }\n    })\n\n    const method_ids = filtered_edges.map(edge => edge.method_id)\n\n    const filtered_methods = methods.filter(method => method_ids.includes(method.method_id));\n\n    return {\n        x: filtered_methods,\n        y: filtered_tests,\n        edges: filtered_edges\n    }\n}","export function filterByCoexecutedTests(test) {\n    return (coverage, globalCoverage) => {\n        const {x, y, edges} = coverage;\n        const identifier = test.getID();\n\n        const filter_test = y.find(test => test.getID() === parseInt(identifier));\n\n        if (filter_test === undefined) {\n            console.error(\"Filter Method was not found...\");\n            return coverage;\n        }\n\n        const filtered_test_id = filter_test.getID();\n\n        const method_ids = edges.filter(edge => filtered_test_id === edge.getY())\n            .map(edge => edge.getX());\n\n        const filtered_methods = x.filter(m => method_ids.includes(m.getID()))\n\n        let filtered_edges = edges.filter(\n            edge => method_ids.includes(edge.getX()) || edge.getY() === filtered_test_id)\n\n        filtered_edges.forEach((edge) => {\n            if (edge.test_id === filtered_test_id) {\n                edge.highlight = true;\n            }\n        })\n\n        const test_ids = filtered_edges.map(edge => edge.getY());\n\n        const filtered_tests = y.filter(test => test_ids.includes(test.getID()));\n\n        return {\n            x: filtered_methods,\n            y: filtered_tests,\n            edges: filtered_edges\n        }\n    }\n}","import React, {useEffect, useState, useContext } from 'react';\nimport { fetchProjects, fetchCommits } from '../../logic/api/morpheusAPIv2';\nimport { Project, Commit } from '../../logic/api/MorpheusTypes';\nimport styles from './Toolbar.module.scss';\n\n\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\n\nimport { MORPHEUS_ACTION } from '../../hooks/useMorpheusReducer';\nimport { HISTORY_ACTION } from '../../hooks/useHistoryReducer';\nimport { MorpheusContext } from '../../pages/MorpheusContext';\n\n// Filters\nimport { filterByTestType, filterByCoOccurence, filterByTestResult, TEST_TYPES } from '../../logic/filters/methods';\nimport { filterByCoexecutedTests } from '../../logic/filters/tests';\nimport { sortMethodsByCoverage, sortMethodsByName, sortMethodsBySuspiciousness } from '../../logic/sorting/methods';\nimport { sortTestsByCoverage, sortTestsByName } from '../../logic/sorting/tests';\nimport { COLOR_SCHEMES } from '../../logic/coloring/useColors';\n\n\nconst ToolBar = ({ onReset, onUndo, onRedo, children}) => {\n    return (\n        <div className={styles.toolbar}>\n            <h4>Toolbar</h4>\n            { children }\n            <Button onClick={onReset}>Reset</Button>\n            <Button onClick={onUndo}>Undo</Button>\n            <Button onClick={onRedo}>Redo</Button>\n        </div>\n    )\n}\n\nexport const CoverageToolbar = () => {\n    const { state, dispatch } = useContext(MorpheusContext);\n\n    return (\n        <ToolBar\n            onReset={() => dispatch({ type: HISTORY_ACTION.RESET })}\n            onUndo={() => dispatch({ type: HISTORY_ACTION.UNDO })}\n            onRedo={() => dispatch({ type: HISTORY_ACTION.REDO })}>\n            <ProjectSelectors\n                onChange={dispatch}\n                project={state.info.project}\n                commit={state.info.commit} />\n            <hr/>\n            <CoverageSorter\n                isLoading={state.isLoading}\n                onChange={dispatch} />\n            <hr/>\n            <h4 style = {{ margin: '5px' }}>Filters</h4>\n            <MethodFilter\n                methods={state.coverage.x}\n                onChange={dispatch}\n                isLoading={state.isLoading}\n                valueX={state.sort.x.name}\n                valueY={state.sort.y.name}\n                />\n            <TestFilter\n                tests={state.coverage.y}\n                onChange={dispatch}\n                isLoading={state.isLoading}\n            />\n            <hr/>\n            <CoverageColorSelector\n                onChange={dispatch}\n                isLoading={state.isLoading}/>\n            <hr/>\n            <CoverageInfoBox\n                project={state.info.project}\n                commit={state.info.commit}\n            />\n        </ToolBar>\n    )\n}\n\nexport const MethodHistoryToolbar = () => {\n    const { state, dispatch } = useContext(MorpheusContext);\n\n    return (\n        <ToolBar\n            onReset={() => dispatch({ type: HISTORY_ACTION.RESET })}\n            onUndo={() => dispatch({ type: HISTORY_ACTION.UNDO })}\n            onRedo={() => dispatch({ type: HISTORY_ACTION.REDO })}>\n            <ProjectSelectors\n                onChange={dispatch}\n                project={state.info.project}\n                commit={state.info.commit}\n            />\n            <hr/>\n            <MethodHistorySorter\n                isLoading={state.isLoading}\n                onChange={dispatch} />\n            <hr/>\n            <MethodInfoBox\n                project={state.info.project}\n                method={state.info.method}\n            />\n        </ToolBar>\n    )\n}\n\nexport const TestHistoryToolbar = () => {\n    const { state, dispatch } = useContext(MorpheusContext);\n\n    return (\n        <ToolBar\n            onReset={() => dispatch({ type: HISTORY_ACTION.RESET })}\n            onUndo={() => dispatch({ type: HISTORY_ACTION.UNDO })}\n            onRedo={() => dispatch({ type: HISTORY_ACTION.REDO })}>\n            <ProjectSelectors\n                onChange={dispatch}\n                project={state.info.project}\n                commit={state.info.commit}\n            />\n            <hr/>\n            <TestHistorySorter\n                isLoading={state.isLoading}\n                onChange={dispatch} />\n            <hr/>\n            <TestInfoBox\n                project={state.info.project}\n                test={state.info.test}\n            />\n        </ToolBar>\n    )\n}\n\n\nconst ProjectSelectors = ({ onChange, project, commit}) => {\n\n    let [projectList, setProjectList] = useState([])\n    let [commitList, setCommitList] = useState([])\n\n    useEffect(() => {\n        fetchProjects()\n            .then((projects) => projects.map(p => new Project(p.project_name, p.id)))\n            .then(setProjectList)\n            .catch(console.error)\n    }, [])\n\n    const projectSelect = ({ target }) => {\n        const projectName = target.innerHTML;\n\n        const project = projectList.find((p) => p.getProjectName() === projectName);\n\n        onChange({ type: MORPHEUS_ACTION.SET_PROJECT, project: project });\n\n        fetchCommits(project.getID())\n            .then((commits) => {\n                return commits.map(c => new Commit(\n                    c.id,\n                    c.sha,\n                    c.datetime,\n                    c.author\n                )).sort((a, b) => a.getDate() - b.getDate())\n                \n            })\n            .then(setCommitList)\n            .catch((err) => {\n                console.error(err);\n                setCommitList([])\n            })\n    }\n\n    const commitSelect = ({ target }) => {\n        const commitSha = target.innerHTML;\n\n        const commit = commitList.find((c) => c.toString() === commitSha);\n\n        onChange({ type: MORPHEUS_ACTION.SET_COMMIT, commit: commit });\n    }\n\n    return (\n    <div style= {{ display: 'flex' }}>\n            <Autocomplete\n                className={styles.mediumButton}\n                value={project}\n                disableClearable={true}\n                options={projectList}\n                getOptionLabel={(option) => option === undefined ? '' : option.toString()}\n                onChange={projectSelect}\n                renderInput={(params) => <TextField {...params} label=\"Projects...\" variant=\"outlined\" />}\n                style= {{ flex: '1', margin: '2px' }}\n            />\n            <Autocomplete\n                className={styles.mediumButton}\n                value={commit}\n                disableClearable={true}\n                disabled={commitList.length === 0}\n                options={commitList}\n                getOptionLabel={(option) => option === undefined ? '' : option.toString()}\n                onChange={commitSelect}\n                renderInput={(params) => <TextField {...params} label=\"Commits...\" variant=\"outlined\" />}\n                style= {{ flex: '1', margin: '2px' }}\n            />\n    </div>\n    )\n}\n\nconst CoverageSorter = ({ onChange, isLoading, valueX, valueY }) => {\n\n    const SORT_MAP_X = {\n        Name: sortMethodsByName,\n        Coverage: sortMethodsByCoverage,\n        Suspiciousness: sortMethodsBySuspiciousness\n    };\n\n    const SORT_KEYS_X = Object.keys(SORT_MAP_X);\n\n    const SORT_MAP_Y = {\n        Name: sortTestsByName,\n        Coverage: sortTestsByCoverage,\n    };\n\n    const SORT_KEYS_Y = Object.keys(SORT_MAP_Y);\n\n    return (\n        <div style = {{ margin: '5px' }}>\n            <h4>Sorting</h4>\n            <div style= {{ display: 'flex' }}>\n                <div style = {{ flex: '1', margin: '2px' }} >\n                    <h6>Sort Methods</h6>\n                    <Select\n                        className={styles.mediumMenu}\n                        defaultValue={valueX !== undefined ? valueX : 'Name'}\n                        onChange={(e) => {\n                            onChange({ type: MORPHEUS_ACTION.SET_SORT, x: { name: e.target.value, func: SORT_MAP_X[e.target.value]}});\n                        }}\n                        disabled={isLoading}>\n                    {SORT_KEYS_X.map((name, index) => <MenuItem key={index} value={name}>{name}</MenuItem>)}\n                    </Select>\n                </div>\n                <div style = {{ flex: '1', margin: '2px' }}>\n                    <h6>Sort Tests</h6>\n                    <Select\n                        className={styles.mediumMenu}\n                        defaultValue={valueY !== undefined ? valueY : 'Name'}\n                        onChange={(e) => {\n                            onChange({ type: MORPHEUS_ACTION.SET_SORT, y: { name: e.target.value, func:SORT_MAP_Y[e.target.value] }});\n                        }}\n                        disabled={isLoading}>\n                        {SORT_KEYS_Y.map((name, index) => <MenuItem key={index} value={name}>{name}</MenuItem>)}\n                    </Select>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst MethodHistorySorter = ({ onChange, isLoading, valueX, valueY }) => {\n    const SORT_MAP_TESTS = {\n        Name: sortTestsByName,\n    };\n\n    const SORT_KEYS_TESTS = Object.keys(SORT_MAP_TESTS);\n\n    return (\n\n        <div style = {{ margin: '5px' }}>\n            <h4>Sort Tests</h4>\n            <Select\n                className={styles.mediumMenu}\n                defaultValue={valueY !== undefined ? valueY : 'Name'}\n                onChange={(e) => {\n                    onChange({ type: MORPHEUS_ACTION.SET_SORT, y: { name: e.target.value, func: SORT_MAP_TESTS[e.target.value] } });\n                }}\n                disabled={isLoading}>\n                {SORT_KEYS_TESTS.map((name, index) => <MenuItem key={index} value={name}>{name}</MenuItem>)}\n            </Select>\n        </div>\n    )\n}\n\nconst TestHistorySorter = ({ onChange, isLoading, valueX, valueY }) => {\n    const SORT_MAP_METHODS = {\n        Name: sortMethodsByName,\n    };\n\n    const SORT_KEYS_METHODS = Object.keys(SORT_MAP_METHODS);\n\n    return (\n\n        <div style = {{ margin: '5px' }}>\n            <h4>Sort Methods</h4>\n            <Select\n                className={styles.mediumMenu}\n                defaultValue={valueY !== undefined ? valueY : 'Name'}\n                onChange={(e) => {\n                    onChange({ type: MORPHEUS_ACTION.SET_SORT, y: { name: e.target.value, func: SORT_MAP_METHODS[e.target.value] } });\n                }}\n                disabled={isLoading}>\n                    {SORT_KEYS_METHODS.map((name, index) => <MenuItem key={index} value={name}>{name}</MenuItem>)}\n                </Select>\n        </div>\n    )\n}\n\n\nexport const CoverageColorSelector = ({ onChange, isLoading }) => {\n    const COLOR_SCHEMES_KEYS = Object.values(COLOR_SCHEMES);\n\n    return (\n        <div style = {{ margin: '5px' }}>\n            <h4>Select Color Scheme</h4>\n            <Select\n                className={styles.mediumMenu}\n                defaultValue={COLOR_SCHEMES.TEST_RESULT}\n                onChange={(e) => {\n                    let color_scheme = e.target.value;\n                    onChange({\n                        type: MORPHEUS_ACTION.SET_COLOR_SCHEME,\n                        color_scheme: color_scheme\n                    })\n                }}\n                disabled={isLoading}>\n            {COLOR_SCHEMES_KEYS.map((name, index) => <MenuItem key={index} value={name}>{name}</MenuItem>)}\n            </Select>\n        </div>\n    )\n}\n\nconst MethodFilter = ({ onChange, methods }) => {\n\n    const setFilter = ({ target }) => {\n        const method_name = target.innerHTML;\n\n        let method = methods.find(method => method.toString() === method_name);\n\n        if (method === undefined) {\n            console.warn(\"Method not found in methods\", methods, method_name)\n            return;\n        }\n\n        onChange({\n            type: MORPHEUS_ACTION.ADD_FILTER,\n            filters: {\n                METHOD_FILTER: filterByCoOccurence(method)\n            }\n        })\n    }\n\n    return (\n        <Autocomplete\n            className={styles.bigMenu}\n            id=\"project-menu\"\n            disableClearable={true}\n            disabled={methods.length === 0}\n            options={methods}\n            getOptionLabel={(option) => option.toString()}\n            onChange={setFilter}\n            renderInput={(params) => <TextField {...params} label=\"Filter: Method name\" variant=\"outlined\" />}\n            style = {{ margin: '5px' }}\n        />\n    )\n}\n\nconst TestFilter = ({ onChange, tests, isLoading }) => {\n    const TEST_RESULTS = {\n        All: \"All\",\n        Passed: \"Passed\",\n        Failed: \"Failed\",\n    }\n\n    const TEST_RESULT_VALUES = Object.values(TEST_RESULTS);\n    const TEST_TYPES_VALUES = Object.values(TEST_TYPES);\n\n    const setFilter = ({ target }) => {\n        const test_name = target.innerHTML;\n\n        let test = tests.find(test => test.toString() === test_name);\n\n        if (test === undefined) {\n            console.warn(\"Test not found in tests\", tests, test_name)\n            return;\n        }\n\n        onChange({\n            type: MORPHEUS_ACTION.ADD_FILTER,\n            filters: {\n                TEST_FILTER: filterByCoexecutedTests(test)\n            }\n        })\n    }\n\n    return (\n        <div>\n            <Autocomplete\n                className={styles.bigMenu}\n                id=\"project-menu\"\n                disableClearable={true}\n                disabled={tests.length === 0}\n                options={tests}\n                getOptionLabel={(option) => option.toString()}\n                onChange={setFilter}\n                renderInput={(params) => <TextField {...params} label=\"Filter: Test name\" variant=\"outlined\" />}\n                style = {{ margin: '5px' }}\n            />\n            <div style = {{ display: 'flex', margin: '5px' }}>\n                <div style = {{ flex: '1', padding: '2px' }} >\n                    <h6>Test Result: </h6>\n                    <Select\n                        className={styles.mediumMenu}\n                        defaultValue={TEST_RESULTS.All}\n                        onChange={(e) => {\n                            const select = e.target.value;\n                            let test_result = undefined;\n                            // Assume no filter else it is passed or failed.\n                            if (select === TEST_RESULTS.Passed || select === TEST_RESULTS.Failed) {\n                                test_result = (select === TEST_RESULTS.Passed);\n                            }\n\n                            onChange({\n                                type: MORPHEUS_ACTION.ADD_FILTER,\n                                filters: {\n                                    TEST_RESULT: filterByTestResult(test_result)\n                                }\n                            })\n                        }}\n                        disabled={isLoading}>\n                        {TEST_RESULT_VALUES.map((name, index) => <MenuItem key={index} value={name.toString()}>{name.toString()}</MenuItem>)}\n                    </Select>\n                </div>\n                <div style = {{ flex: '1', padding: '2px' }} >\n                    <h6>Test Type: </h6>\n                    <Select\n                        className={styles.mediumMenu}\n                        defaultValue={TEST_TYPES.ALL}\n                        onChange={(e) => {\n                            onChange({\n                                type: MORPHEUS_ACTION.ADD_FILTER,\n                                filters: {\n                                    TEST_TYPE: filterByTestType(e.target.value)\n                                }\n                            })\n                        }}\n                        disabled={isLoading}>\n                        {TEST_TYPES_VALUES.map((name, index) => <MenuItem key={index} value={name.toString()}>{name}</MenuItem>)}\n                    </Select>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst InfoBox = ({project, children}) => {\n    if (project === null) {\n        return null;\n    }\n\n    return (\n        <div>\n            <h3>Project: {project.toString()}</h3>\n            {children}\n        </div>\n    )\n}\n\nconst CoverageInfoBox = ({project, commit}) => {\n    if (commit === undefined) {\n        return null;\n    }\n\n    return (\n        <InfoBox project={project}>\n            <p>SHA: {commit.getSHA()}</p>\n            <p>Author: {commit.getAuthor()}</p>\n            <p>Date: {commit.getDate().toISOString()}</p>\n        </InfoBox>\n    )\n}\n\nconst MethodInfoBox = ({ project, method }) => {\n    if (method === undefined) {\n        return null;\n    }\n\n    return (\n        <InfoBox project={project}>\n            <p><b>Method Decl:{method.getMethodName()}</b></p>\n            <p>Package: {method.getPackageName()}</p>\n            <p>Class: {method.getClassName()}</p>\n        </InfoBox>\n    )\n}\n\nconst TestInfoBox = ({ project, test }) => {\n    if (test === undefined) {\n        return null;\n    }\n\n    return (\n        <InfoBox project={project}>\n            <p><b>Testcase: {test.getMethodName()}</b></p>\n            <p>Package: {test.getPackageName()}</p>\n            <p>Class: {test.getClassName()}</p>\n        </InfoBox>\n    )\n}","import React from 'react';\nimport { Button } from 'rsuite';\nimport 'rsuite/dist/styles/rsuite-default.css';\nimport Popover from '@material-ui/core/Popover';\nimport ClearIcon from '@material-ui/icons/Clear';\n\nconst CustomPopover = (props) => {\n    const { \n        children,\n        anchor,\n        setAnchor,\n        title,\n        onFilterClick,\n        onHistoryClick,\n        secondaryBtn='Filter by (default)',\n        primaryBtn='Filter'} = props;\n\n    return (\n        <Popover\n            id={Boolean(anchor) ? 'simple-popover' : undefined}\n            open={Boolean(anchor)}\n            anchorEl={anchor}\n            onClose={setAnchor}\n            anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'center',\n            }}\n            transformOrigin={{\n                vertical: 'top',\n                horizontal: 'center',\n            }}\n        >\n            <h3>\n                {title}\n                <Button sz=\"xs\" onClick={setAnchor}>\n                    <ClearIcon fontSize=\"small\" />\n                </Button>\n            </h3>\n            {children}\n            <Button appearance=\"default\" onClick={onFilterClick}>{secondaryBtn}</Button>\n            <Button appearance=\"primary\" onClick={onHistoryClick}>{primaryBtn}</Button>\n        </Popover>\n    )\n}\n\nexport const CommitPopover = ({ commit, anchor, setAnchor, onFilterClick, onHistoryClick }) => {\n    \n    return (\n        <CustomPopover\n            anchor={anchor}\n            setAnchor={setAnchor}\n            title={commit.toString()}\n            onFilterClick={onFilterClick}\n            onHistoryClick={onHistoryClick}\n            primaryBtn='View Coverage'\n            >\n            <p>Author: {commit.getAuthor()} </p>\n            <p>Date: {commit.getDate().toDateString()} </p>\n            <p>SHA: {commit.getSHA()} </p>\n        </CustomPopover>\n    )\n}\n\nexport const MethodPopover = ({ anchor, setAnchor, method, project, onFilterClick, onHistoryClick }) => {\n\n    const methodName = method.getMethodName();\n    const packageName = method.getPackageName();\n    const projectName = project.getProjectName();\n\n    return (\n        <CustomPopover\n            anchor={anchor}\n            setAnchor={setAnchor}\n            title={methodName}\n            onFilterClick={onFilterClick}\n            onHistoryClick={onHistoryClick}\n            primaryBtn='View History'\n        >\n            <p>Project: {projectName} </p>\n            <p>Package: {packageName}{ }</p>\n        </CustomPopover>\n    )\n}","import React, { useContext } from 'react';\nimport { useProcessCoverage } from '../hooks/useProcessCoverage';\n\nimport MatrixVisualization from '../components/morpheus/MatrixVisualization';\nimport { CoverageToolbar, MethodHistoryToolbar, TestHistoryToolbar } from '../components/morpheus/Toolbar';\nimport { MethodPopover, CommitPopover} from '../components/morpheus/MethodPopover';\nimport { Test, Method, Commit} from '../logic/api/MorpheusTypes';\n\nimport styles from './Morpheus.module.scss';\nimport { MorpheusContext } from './MorpheusContext';\nimport { MORPHEUS_ACTION } from '../hooks/useMorpheusReducer';\n\nimport { filterByCoOccurence } from '../logic/filters/methods';\nimport { filterByCoexecutedTests } from '../logic/filters/tests';\nimport { setColorScheme } from '../logic/coloring/useColors';\n\nconst useLoading = (Component, LoadingComponent = <div />) => {\n    return (props) => props.isLoading ? LoadingComponent : <Component {...props} />;\n}\n\nconst MatrixVisualizationWithLoading = useLoading(\n    MatrixVisualization,\n    <div className={styles.onLoadDiv}>\n        <p>Please select a project using the toolbar on the right.</p>\n    </div>\n)\n\nconst getLabels = (type) => {\n    switch (type) {\n        case 'COVERAGE':\n            return { xLabel: 'Methods', yLabel: 'Tests' }\n        case 'TEST_HISTORY':\n            return { xLabel: 'Commits', yLabel: 'Methods' }\n        case 'METHOD_HISTORY':\n            return { xLabel: 'Commits', yLabel: 'Tests' }\n        default:\n            return { xLabel: null, yLabel: null }\n    }\n}\n\nconst getPopover = (state, dispatch, onFilterClick, onHistoryClick) => {\n    let popover = null;\n    let label = state.pop_up.label\n\n    if ((label === undefined) || (label === null)) {\n        return;\n    }\n\n    if (label.constructor.name === 'Commit') {\n        popover = <CommitPopover\n            anchor={state.pop_up.anchor}\n            setAnchor={() => {\n                dispatch({\n                    type: MORPHEUS_ACTION.POP_UP,\n                    pop_up: {\n                        isVisible: false,\n                        label: null,\n                        anchor: null,\n                    }\n                });\n            }}\n            commit={label}\n            project={state.info.project}\n            onFilterClick={onFilterClick}\n            onHistoryClick={onHistoryClick}\n        />\n    } else {\n        popover = <MethodPopover\n            anchor={state.pop_up.anchor}\n            setAnchor={() => {\n                dispatch({\n                    type: MORPHEUS_ACTION.POP_UP,\n                    pop_up: {\n                        isVisible: false,\n                        label: null,\n                        anchor: null,\n                    }\n                });\n            }}\n            method={label}\n            project={state.info.project}\n            onFilterClick={onFilterClick}\n            onHistoryClick={onHistoryClick}\n        />\n    }\n\n    return popover;\n}\n\nconst Morpheus = () => {\n    const { state, dispatch } = useContext(MorpheusContext);\n\n    const coverage = useProcessCoverage(state);\n\n    //  Get label names\n    let {xLabel, yLabel} = state.info.type !== null ? getLabels(state.info.type) : {xLabel: null, yLabel: null}\n\n    const toolbar = {\n        'DEFAULT': <CoverageToolbar />,\n        'COVERAGE': <CoverageToolbar />,\n        'TEST_HISTORY': <TestHistoryToolbar />,\n        'METHOD_HISTORY': <MethodHistoryToolbar />,\n    }\n\n    const clickHistory = () => {\n        const label_type = state.pop_up.label.constructor.name;\n        if (label_type === Method.name) {\n            dispatch({\n                type: MORPHEUS_ACTION.SET_METHOD_HISTORY,\n                state: {\n                    type: 'METHOD_HISTORY',\n                    info: {\n                        label: state.pop_up.label,\n                    }\n                }\n            })\n        }\n        else if (label_type === Test.name) {\n            dispatch({\n                type: MORPHEUS_ACTION.SET_TEST_HISTORY,\n                state: {\n                    type: 'TEST_HISTORY',\n                    info: {\n                        label: state.pop_up.label,\n                    }\n                }\n            })\n        }\n        else if (label_type === Commit.name) {\n            dispatch({\n                type: MORPHEUS_ACTION.SET_COMMIT,\n                commit: state.pop_up.label,\n            })\n        }\n    }\n\n    setColorScheme(state.color_scheme, state.info.type, coverage, state.coverage);\n\n    return (\n        <>\n            <div className={styles.twoColumn}>\n                <MatrixVisualizationWithLoading\n                    isLoading={state.isLoading}\n                    coverage={coverage}\n                    onXClick={(e) => {\n                        dispatch({\n                            type: MORPHEUS_ACTION.ADD_FILTER,\n                            filters: {\n                                METHOD_COOCCURENCE: filterByCoOccurence(e.target.__data__)\n                            }\n                        });\n                    }}\n                    onYClick={(e) => {\n                        dispatch({\n                            type: MORPHEUS_ACTION.ADD_FILTER,\n                            filters: {\n                                TEST_COEXECUTED: filterByCoexecutedTests(e.target.__data__)\n                            }\n                        });\n                    }}\n                    onRightClick={(event, label) => {\n                        event.preventDefault(); // to prevent regular context menu from appearing\n\n                        dispatch({\n                            type: MORPHEUS_ACTION.POP_UP,\n                            pop_up: {\n                                isVisible: true,\n                                label: label,\n                                anchor: event.target,\n                            }\n                        });\n                    }}\n                    xLabel={xLabel}\n                    yLabel={yLabel}\n                    />\n                {getPopover(state, dispatch, console.log, clickHistory)}\n            </div>\n            {toolbar[state.info.type]}\n        </>\n    );\n};\n\nexport default Morpheus;","import React from 'react';\nimport {\n  Route,\n  BrowserRouter as Router,\n  Switch\n} from 'react-router-dom';\n\nimport Footer from './components/Footer';\nimport Navbar from './components/Navbar';\n\nimport About from './pages/About';\nimport Morpheus from './pages/Morpheus';\nimport { MorpheusProvider } from './pages/MorpheusContext';\n\nimport './styles/global.scss';\n\nfunction App() {\n  return (\n    <div className='app'>\n      \n      <Router>\n        <Navbar />\n        <div className=\"component\">\n          <MorpheusProvider>\n            <Switch>\n              <Route exact path=\"/\" component={About} />\n              <Route exact path=\"/about\" component={About} />\n              <Route exact path=\"/morpheus\" component={Morpheus} />\n            </Switch>\n          </MorpheusProvider>\n        </div>\n      </Router>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}